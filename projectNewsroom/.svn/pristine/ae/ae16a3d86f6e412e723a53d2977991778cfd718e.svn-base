package com.webjjang.board.controller;

import java.util.regex.Pattern;

import com.webjjang.board.dto.MemberDTO;
import com.webjjang.board.service.MemJoinService;
import com.webjjang.board.service.MemLoginService;
import com.webjjang.main.SelectMenuInterface;
import com.webjjang.util.InUtil;
import com.webjjang.util.OutUtil;

public class LoginController implements SelectMenuInterface {
	@Override
	public void selectMenu() {
		// 로그인을 위한 장소
		OutUtil.printTitle("회원관리 탭");
		try {
			// 무한 반복을 위해 while문 삽입.
			while (true) {
				OutUtil.printMenu("1.로그인 하기\n2.회원가입하기\n0.이전메뉴", "/", 14);
				// 메뉴를 입력받아 각각을 출력하는 프로그램
				String menu = InUtil.getMenu("메뉴를 선택하세요");
				switch (menu) {
				case "1":
					// 객체 생성
					MemLoginService memLoginService = new MemLoginService();
					String id = InUtil.getMenu("아이디를 입력하세요."); // id를 입력받아 process에 넣기
					String pw = InUtil.getMenu("비밀번호를 입력하세요."); // pw를 입력받아 process에 넣기
					MemberDTO userDTO = memLoginService.process(id, pw);
					// 처리
					// userDTO가 null이 아니면 회원정보가 있다는 말.
					if (userDTO != null) { // userDTO가 null이 아니면 회원용 메뉴로 들어간다.
						System.out.println(userDTO.getName() + "님 환영합니다!");
						MemManageController memManageController = new MemManageController();
						memManageController.selectMenu(userDTO);
						break;
					} else if (userDTO == null) {// userDTO가 null이면 while을 돌린다.
						break;
					}

				case "2":

					// 객체 생성
					// 전체 객체가 전부 오라클에서 not null이다.
					MemJoinService memJoinService = new MemJoinService();
					String joinId = InUtil.getMenu("아이디는 영문자와 숫자만 가능합니다.\n아이디를 입력하세요.");
					// id를 검사하기 위한 프로그램
					// id에 영소문자와 숫자만 입력하도록 하기 위한 처리
					String pattern = "^[A-Za-z0-9]*$";
					boolean checkId = Pattern.matches(pattern, joinId);
					if (checkId == true) {

					} else {
						System.out.println("아이디는 영문자와 숫자만 가능합니다.");
						break;
					}
					String joinPw = InUtil.getMenu("\n비밀번호는 #$*-_=+'\"를 사용할 수 없습니다.\n비밀번호를 입력하세요.");
					// pw를 검사하기 위한 프로그램
					// 비밀번호에 ',"등을 사용하여 오라클에 직접 접속하는 행위를 막기 위한 정규식
					String pattern1 = "^[#$*-_=+\\'\"]*$";
					boolean checkPw = Pattern.matches(pattern1, joinPw);
					System.out.println(checkPw);
					if (checkPw == true) {

					} else {
						System.out.println("비밀번호는 영문자와 숫자만 가능합니다.");
						break;
					}
					String joinName = InUtil.getMenu("이름를 입력하세요.");
					String joinNick = InUtil.getMenu("닉네임을 입력하세요.");
					String joinTel = InUtil.getMenu("전화번호를 입력하세요.");
					String joinEmail = InUtil.getMenu("이메일을 입력하세요.");
					// pw를 검사하기 위한 프로그램
					// 비밀번호에 ',"등을 사용하여 오라클에 직접 접속하는 행위를 막기 위한 정규식
					String pattern2 = "^[@.]*$";
					boolean checkEmail = Pattern.matches(pattern2, joinEmail);
					System.out.println(checkEmail);
					if (checkPw == true) {

					} else {
						System.out.println("유효한 이메일이 아닙니다.");
						break;
					}
					// 처리
					memJoinService.process(joinId, joinPw, joinName, joinNick, joinTel, joinEmail);
					break;

				case "0":
					return;

				default:
					System.out.println("다시 입력하세요.");
					break;
				}
			} // end of while;
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}

	}// end of selectMenu()

}// end of class BoardController
