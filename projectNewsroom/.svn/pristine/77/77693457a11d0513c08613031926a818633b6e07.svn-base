package com.webjjang.board.controller;

import java.util.List;

import com.webjjang.board.dto.MemberDTO;
import com.webjjang.board.service.MemDelUserService;
import com.webjjang.board.service.MemListService;
import com.webjjang.board.service.MemLoginService;
import com.webjjang.board.service.MemUpdateService;
import com.webjjang.board.service.MemViewService;
import com.webjjang.main.SelectMenuInterface;
import com.webjjang.util.InUtil;
import com.webjjang.util.OutUtil;
import com.webjjang.view.board.MemPrint;

public class MemManageController implements SelectMenuInterface {

	public void selectMenu(MemberDTO userDTO) {
		// while을 이용해 메뉴를 계속 출력

		while (true) {
			OutUtil.printMenu("1.회원 명단 보기\n2.회원 찾기\n3.내 정보 보기\n4.내 정보 수정\n5.탈퇴\n0.이전메뉴", "/", 14);
			String menu = InUtil.getMenu("메뉴를 선택하세요");
			switch (menu) {
			case "1":
				System.out.println("회원 명단 보기입니다.");
				// 객체를 생성 및 처리.
				MemListService memListService = new MemListService();
				MemPrint memPrint = new MemPrint();
				List<MemberDTO> list = memListService.process(null);
				memPrint.list(list);
				break;
			case "2":
				System.out.println("회원 찾기입니다.");
				String inputId = InUtil.getMenu("찾으실 회원의 아이디(ID)를 입력하세요 ");
				MemViewService memViewService = new MemViewService();
				MemberDTO memberDTO = memViewService.process(inputId);
				System.out.println(memberDTO);
				break;
			case "3":
				MemViewService memViewService2 = new MemViewService();
				printUserInfo(memViewService2.process(userDTO.getId()));
				break;
			case "4":
				System.out.println("내 정보 수정입니다.");
				// 객체 생성
				// 비밀번호를 입력 받아 동일하면 처리 진행
				String id = userDTO.getId();
				String pw = InUtil.getMenu("비밀번호를 입력하세요.");
				MemLoginService memLoginService = new MemLoginService();
				MemberDTO updateUserInfo = memLoginService.process(id, pw);
				// 처리
				if (pw.equals(updateUserInfo.getPw())) {
					MemViewService memViewService3 = new MemViewService();
					printUserInfo(memViewService3.process(id));
					MemUpdateService memUpdateService = new MemUpdateService();
					OutUtil.printMenu("수정할 내용을 입력하세요.\n바꾸실 내용이 없다면 엔터로 넘어가시면 됩니다.", "-", 14);
					String Id = updateUserInfo.getId();
					String updatePw = InUtil.getMenu("비밀번호 ");
					if (updatePw.trim().equals(""))
						updatePw = userDTO.getPw();
					String updateName = InUtil.getMenu("이름 ");
					if (updateName.trim().equals(""))
						updateName = userDTO.getName();
					String updateNick = InUtil.getMenu("닉네임 ");
					if (updateNick.trim().equals(""))
						updateNick = userDTO.getNick();
					String updateTel = InUtil.getMenu("전화번호 ");
					if (updateTel.trim().equals(""))
						updateTel = userDTO.getTel();
					String updateEmail = InUtil.getMenu("이메일 ");
					if (updateEmail.trim().equals(""))
						updateEmail = userDTO.getEmail();
					printUserInfo(
							memUpdateService.process(Id, updatePw, updateName, updateNick, updateTel, updateEmail));
					System.out.println("정상적으로 변경되었습니다.");
				} else {
					System.out.println("비밀번호가 틀렸습니다.\n다시 시도해주세요.");
				}

				break;
			case "5":
				System.out.println("탈퇴하시겠습니까?(yes/no)");
				String select = InUtil.getMenu("");
				switch (select) {
				case "y":
				case "Y":
				case "yes":
				case "YES":
					String delId = userDTO.getId();
					String delPw = InUtil.getMenu("삭제를 위해 비밀번호를 입력하세요.");
					if (delPw.equals(userDTO.getPw())) {
						MemDelUserService memDelUserService = new MemDelUserService();
						memDelUserService.process(delId, delPw);
						System.out.println("탈퇴하셨습니다.");
						return;
					} else {
						System.out.println("비밀번호가 틀렸습니다. 다시 시도하세요.");
						break;
					}
				case "n":
				case "N":
				case "no":
				case "NO":
					break;
					
				default:
					System.out.println("y/n만 입력하십시오.");
					break;
				}

			case "0":
				return;

			default:
				System.out.println("잘못 입력하셨습니다.\n다시 입력하세요.");
				break;
			}
		} // end of while;
	}

	@Override
	public void selectMenu() {
		// TODO Auto-generated method stub

	}

	public void printUserInfo(MemberDTO userDTO) {
		OutUtil.repeatChar("*", 30);
		System.out.println("ID:\t" + userDTO.getId() + "\n" + "이름:\t" + userDTO.getName() + "\n" + "닉네임:\t"
				+ userDTO.getNick() + "\n" + "전화번호:\t" + userDTO.getTel() + "\n" + "이메일:\t" + userDTO.getEmail() + "\n"
				+ "회원등급:\t" + userDTO.getGrade());
		OutUtil.repeatChar("*", 30);
	}

}// end of class MEmManageController
